*pack-manager.txt*    Enhanced commands for Neovim's built-in vim.pack manager

PACK-MANAGER.NVIM                                            *pack-manager.nvim*

Enhanced commands for Neovim's built-in `vim.pack` plugin manager.

==============================================================================
CONTENTS                                              *pack-manager-contents*

    1. Introduction ................................. |pack-manager-intro|
    2. Requirements ................................. |pack-manager-requirements|
    3. Commands ..................................... |pack-manager-commands|
    4. Configuration ................................ |pack-manager-config|
    5. Examples ..................................... |pack-manager-examples|

==============================================================================
1. INTRODUCTION                                          *pack-manager-intro*

pack-manager.nvim provides enhanced commands for managing plugins installed
via Neovim 0.12+'s built-in `vim.pack` system. It offers intelligent plugin
installation with immediate loading, automatic setup generation, plugin updates,
safe removal, disable/enable functionality, and bulk operations for inactive plugins.

==============================================================================
2. REQUIREMENTS                                    *pack-manager-requirements*

- Neovim 0.12+ (nightly builds)
- Built-in `vim.pack` functionality

==============================================================================
3. COMMANDS                                           *pack-manager-commands*

Installation Commands:~
                                                              *:PackAdd*
    :PackAdd <spec>             Unified plugin installation command
                                Supports common plugin names, GitHub shorthand 
                                (owner/repo), or full URLs with tab completion
                                Features immediate loading, automatic setup() calls
                                and colorscheme activation

Update Commands:~
                                                              *:PackUpdate*
    :PackUpdate [name]          Update specific plugin or all plugins
                                With no arguments, updates all installed plugins
                                Tab completion available for plugin names
                                
                                                              *:PackUpdateAll*
    :PackUpdateAll              Update all installed plugins at once
                                Bulk update with confirmation prompt

Basic Commands:~
                                                              *:PackList*
    :PackList                   List all plugins with active/inactive status
    
                                                              *:PackCount*
    :PackCount                  Show total plugin count
    
                                                              *:PackInfo*
    :PackInfo [name]            Show detailed plugin information

Removal Commands:~
                                                              *:PackDelTemp*
    :PackDelTemp <name>         Remove plugin temporarily (reinstalls on restart)
    
                                                              *:PackDelFull*
    :PackDelFull <name>         Permanently remove plugin and config files
    
                                                              *:PackRemove*
    :PackRemove                 Interactive removal with numbered menu
    

Disable/Enable Commands:~
                                                              *:PackDisable*
    :PackDisable <name>         Disable plugin (reversible, preserves config)
    
                                                              *:PackEnable*
    :PackEnable <name>          Re-enable previously disabled plugin
    
                                                              *:PackListDisabled*
    :PackListDisabled           List all disabled plugins

Inactive Plugin Commands:~
                                                              *:PackListInactive*
    :PackListInactive           List plugins marked as inactive
    
                                                              *:PackDelInactive*
    :PackDelInactive            Remove all inactive plugins from disk
    
                                                              *:PackDisableInactive*
    :PackDisableInactive        Disable all inactive plugins permanently

==============================================================================
4. CONFIGURATION                                       *pack-manager-config*

No configuration required. The plugin automatically sets up all commands
when loaded.

Configuration Structure:~
The plugin assumes this directory structure:
>
    ~/.config/nvim/
    ├── init.lua                     (contains require statements)
    ├── lua/
    │   └── plugins/
    │       ├── plugin1.lua          (individual plugin configs)
    │       ├── plugin2.lua
    │       └── disabled/            (disabled plugin configs)
    │           ├── plugin3.lua
    │           └── plugin4.lua
<

Each plugin config file should contain a `vim.pack.add()` call and the
plugin's setup configuration.

==============================================================================
5. EXAMPLES                                           *pack-manager-examples*

Plugin Installation:~
>
    " Install with smart configuration (immediately available)
    :PackAdd folke/tokyonight.nvim  " GitHub shorthand
    :PackAdd mason                  " Common plugin name
    :PackAdd telescope              " :Telescope command available right after
    :PackAdd lspconfig              " LSP configuration
<

Plugin Updates:~
>
    " Update specific plugin
    :PackUpdate tokyonight.nvim
    
    " Update all plugins
    :PackUpdate
    :PackUpdateAll
<

Plugin Management:~
>
    " List and get info
    :PackList
    :PackInfo telescope.nvim
    
    " Temporary removal
    :PackDelTemp some-plugin
    
    " Permanent removal
    :PackDelFull some-plugin
    
    " Disable/enable (recommended)
    :PackDisable some-plugin
    :PackEnable some-plugin
<

Programmatic Usage:~
>
    lua << EOF
    local pack_manager = require('pack-manager')
    
    -- Install and update
    pack_manager.add_plugin('folke/tokyonight.nvim')
    pack_manager.update_plugin('telescope.nvim')
    pack_manager.update_all_plugins()
    
    -- Manage plugins
    pack_manager.disable_plugin('some-plugin')
    pack_manager.list_inactive_plugins()
    EOF
<

Plugin Categories:~
The plugin automatically detects and configures different plugin types:

- Colorschemes: tokyonight, catppuccin, gruvbox, nord, etc.
  (Includes colorscheme activation prompts)

- LSP: lspconfig, mason, lazydev, blink, completion plugins
  (Automatic require().setup() generation)

- UI: lualine, telescope, nvim-tree, oil, mini, nvim-web-devicons, fzf-lua
  (Setup calls with configuration templates)

- Git: gitsigns, fugitive
  (Git integration setup)

- Development: nvim-lint, nvim-dap, harpoon
  (Development tools with setup() calls)

==============================================================================
vim:tw=78:ts=8:ft=help:norl: